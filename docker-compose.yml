version: '3.9'
services:
  xn--mazon-c9d.co.jp:
    ports:
      - 80:80
    build:
      context: frontend
    tty: true # コンテナを起動しっぱなしにする。
    volumes:
      - ./frontend:/app # フォルダを同期
      - node_modules:/app/node_modules # node_modules, .nextはボリュームに保存
    environment:
      - WATCHPACK_POLLING=true # ホットリロード（同期に必要）
    command: >
      bash -c "
      npm run start
      "
    depends_on: # db必須のフロント, dbコンテナが先に立つ
      - db
    restart: on-failure # 失敗したら再度コンテナを建てる
  backend:
    build:
      context: backend
    command: >
      bash -c "
      rm -f tmp/pids/server.pid &&
      rails db:create &&
      rails db:migrate &&
      rails db:seed &&
      rails s -p 3001 -b '0.0.0.0'
      "
    restart: on-failure
    tty: true
    stdin_open: true
    depends_on:
      - db
    ports:
      - '3001:3001'
    volumes:
      - ./backend:/app
  db:
    image: mysql:5.7
    environment:
      MYSQL_ROOT_PASSWORD: password
      MYSQL_DATABASE: root
    ports:
      - '3306:3306'
    volumes:
      - backend-db:/var/lib/mysql
  mailbox:
    image: phishing-scam-scenario/mailbox
    build:
      context: ./mailbox
      dockerfile: Dockerfile
    ports:
      - ${DEV_MAILBOX_PORT}:8025

  setup:
    image: phishing-scam-scenario/setup
    depends_on:
      - mailbox
    build:
      context: ./setup
      dockerfile: Dockerfile

volumes:
  node_modules:
  backend-db:
